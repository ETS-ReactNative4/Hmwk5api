{"ast":null,"code":"import actionTypes from '../constants/actionTypes';\nimport runtimeEnv from '@mars/heroku-js-runtime-env';\n\nfunction moviesFetched(movies) {\n  return {\n    type: actionTypes.FETCH_MOVIES,\n    movies: movies\n  };\n}\n\nfunction movieFetched(movie) {\n  return {\n    type: actionTypes.FETCH_MOVIE,\n    selectedMovie: movie\n  };\n}\n\nfunction movieSet(movie) {\n  return {\n    type: actionTypes.SET_MOVIE,\n    selectedMovie: movie\n  };\n}\n\nexport function setMovie(movie) {\n  return function (dispatch) {\n    dispatch(movieSet(movie));\n  };\n}\nexport function fetchMovies() {\n  var env = runtimeEnv();\n  return function (dispatch) {\n    return fetch(\"\".concat(env.REACT_APP_API_URL, \"/movies?reviews=true\"), {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': localStorage.getItem('token')\n      },\n      mode: 'cors'\n    }).then(function (response) {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n\n      return response.json();\n    }).then(function (res) {\n      dispatch(moviesFetched(res));\n    }).catch(function (e) {\n      return console.log(e);\n    });\n  };\n}\nexport function fetchMovie(movieId) {\n  var env = runtimeEnv();\n  return function (dispatch) {\n    return fetch(\"\".concat(env.REACT_APP_API_URL, \"/movies/\").concat(movieId, \"?reviews=true\"), {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': localStorage.getItem('token')\n      },\n      mode: 'cors'\n    }).then(function (response) {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n\n      return response.json();\n    }).then(function (res) {\n      dispatch(movieFetched(res));\n    }).catch(function (e) {\n      return console.log(e);\n    });\n  };\n}","map":{"version":3,"sources":["/Users/murat/Desktop/week13-master/src/actions/movieActions.js"],"names":["actionTypes","runtimeEnv","moviesFetched","movies","type","FETCH_MOVIES","movieFetched","movie","FETCH_MOVIE","selectedMovie","movieSet","SET_MOVIE","setMovie","dispatch","fetchMovies","env","fetch","REACT_APP_API_URL","method","headers","localStorage","getItem","mode","then","response","ok","Error","statusText","json","res","catch","e","console","log","fetchMovie","movieId"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,0BAAxB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;;AAEA,SAASC,aAAT,CAAuBC,MAAvB,EAA8B;AAC1B,SAAO;AACHC,IAAAA,IAAI,EAAEJ,WAAW,CAACK,YADf;AAEHF,IAAAA,MAAM,EAAEA;AAFL,GAAP;AAIH;;AAED,SAASG,YAAT,CAAsBC,KAAtB,EAA4B;AACxB,SAAO;AACHH,IAAAA,IAAI,EAAEJ,WAAW,CAACQ,WADf;AAEHC,IAAAA,aAAa,EAAEF;AAFZ,GAAP;AAIH;;AAED,SAASG,QAAT,CAAkBH,KAAlB,EAAwB;AACpB,SAAO;AACHH,IAAAA,IAAI,EAAEJ,WAAW,CAACW,SADf;AAEHF,IAAAA,aAAa,EAAEF;AAFZ,GAAP;AAIH;;AAED,OAAO,SAASK,QAAT,CAAkBL,KAAlB,EAAyB;AAC5B,SAAO,UAAAM,QAAQ,EAAI;AACfA,IAAAA,QAAQ,CAACH,QAAQ,CAACH,KAAD,CAAT,CAAR;AACH,GAFD;AAGH;AAED,OAAO,SAASO,WAAT,GAAsB;AACzB,MAAMC,GAAG,GAAGd,UAAU,EAAtB;AACA,SAAO,UAAAY,QAAQ,EAAI;AACf,WAAOG,KAAK,WAAID,GAAG,CAACE,iBAAR,2BAAiD;AACzDC,MAAAA,MAAM,EAAE,KADiD;AAEzDC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB,kBAFX;AAGL,yBAAiBC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAHZ,OAFgD;AAOzDC,MAAAA,IAAI,EAAE;AAPmD,KAAjD,CAAL,CAQFC,IARE,CAQI,UAACC,QAAD,EAAc;AACjB,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AACd,cAAMC,KAAK,CAACF,QAAQ,CAACG,UAAV,CAAX;AACH;;AACD,aAAOH,QAAQ,CAACI,IAAT,EAAP;AACH,KAbE,EAcFL,IAdE,CAcI,UAACM,GAAD,EAAS;AACZhB,MAAAA,QAAQ,CAACX,aAAa,CAAC2B,GAAD,CAAd,CAAR;AACH,KAhBE,EAiBFC,KAjBE,CAiBK,UAACC,CAAD;AAAA,aAAOC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAAP;AAAA,KAjBL,CAAP;AAkBH,GAnBD;AAoBH;AAED,OAAO,SAASG,UAAT,CAAoBC,OAApB,EAA4B;AAC/B,MAAMpB,GAAG,GAAGd,UAAU,EAAtB;AACA,SAAO,UAAAY,QAAQ,EAAI;AACf,WAAOG,KAAK,WAAID,GAAG,CAACE,iBAAR,qBAAoCkB,OAApC,oBAA4D;AACpEjB,MAAAA,MAAM,EAAE,KAD4D;AAEpEC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB,kBAFX;AAGL,yBAAiBC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAHZ,OAF2D;AAOpEC,MAAAA,IAAI,EAAE;AAP8D,KAA5D,CAAL,CAQFC,IARE,CAQI,UAACC,QAAD,EAAc;AACjB,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AACd,cAAMC,KAAK,CAACF,QAAQ,CAACG,UAAV,CAAX;AACH;;AACD,aAAOH,QAAQ,CAACI,IAAT,EAAP;AACH,KAbE,EAcFL,IAdE,CAcI,UAACM,GAAD,EAAS;AACZhB,MAAAA,QAAQ,CAACP,YAAY,CAACuB,GAAD,CAAb,CAAR;AACH,KAhBE,EAiBFC,KAjBE,CAiBK,UAACC,CAAD;AAAA,aAAOC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAAP;AAAA,KAjBL,CAAP;AAkBH,GAnBD;AAoBH","sourcesContent":["import actionTypes from '../constants/actionTypes';\nimport runtimeEnv from '@mars/heroku-js-runtime-env';\n\nfunction moviesFetched(movies){\n    return {\n        type: actionTypes.FETCH_MOVIES,\n        movies: movies\n    }\n}\n\nfunction movieFetched(movie){\n    return {\n        type: actionTypes.FETCH_MOVIE,\n        selectedMovie: movie\n    }\n}\n\nfunction movieSet(movie){\n    return {\n        type: actionTypes.SET_MOVIE,\n        selectedMovie: movie\n    }\n}\n\nexport function setMovie(movie) {\n    return dispatch => {\n        dispatch(movieSet(movie));\n    }\n}\n\nexport function fetchMovies(){\n    const env = runtimeEnv();\n    return dispatch => {\n        return fetch(`${env.REACT_APP_API_URL}/movies?reviews=true`, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('token')\n            },\n            mode: 'cors'})\n            .then( (response) => {\n                if (!response.ok) {\n                    throw Error(response.statusText);\n                }\n                return response.json();\n            })\n            .then( (res) => {\n                dispatch(moviesFetched(res));\n            })\n            .catch( (e) => console.log(e) );\n    }\n}\n\nexport function fetchMovie(movieId){\n    const env = runtimeEnv();\n    return dispatch => {\n        return fetch(`${env.REACT_APP_API_URL}/movies/${movieId}?reviews=true`, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('token')\n            },\n            mode: 'cors'})\n            .then( (response) => {\n                if (!response.ok) {\n                    throw Error(response.statusText);\n                }\n                return response.json();\n            })\n            .then( (res) => {\n                dispatch(movieFetched(res));\n            })\n            .catch( (e) => console.log(e) );\n    }\n}"]},"metadata":{},"sourceType":"module"}