{"ast":null,"code":"import actionTypes from '../constants/actionTypes';\nimport runtimeEnv from '@mars/heroku-js-runtime-env';\n\nfunction userLoggedIn(username) {\n  return {\n    type: actionTypes.USER_LOGGEDIN,\n    username: username\n  };\n}\n\nfunction logout() {\n  return {\n    type: actionTypes.USER_LOGOUT\n  };\n}\n\nexport function submitLogin(data) {\n  var env = runtimeEnv();\n  return function (dispatch) {\n    return fetch(\"\".concat(env.REACT_APP_API_URL, \"/signin\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data),\n      mode: 'cors'\n    }).then(function (response) {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n\n      return response.json();\n    }).then(function (res) {\n      localStorage.setItem('username', data.username);\n      localStorage.setItem('token', res.token);\n      dispatch(userLoggedIn(data.username));\n    }).catch(function (e) {\n      return console.log(e);\n    });\n  };\n}\nexport function submitRegister(data) {\n  var env = runtimeEnv();\n  return function (dispatch) {\n    return fetch(\"\".concat(env.REACT_APP_API_URL, \"/signup\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data),\n      mode: 'cors'\n    }).then(function (response) {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n\n      return response.json();\n    }).then(function (res) {\n      dispatch(submitLogin(data));\n    }).catch(function (e) {\n      return console.log(e);\n    });\n  };\n}\nexport function logoutUser() {\n  return function (dispatch) {\n    localStorage.removeItem('username');\n    localStorage.removeItem('token');\n    dispatch(logout());\n  };\n}","map":{"version":3,"sources":["/Users/murat/Desktop/Web Api/finalProject/Hmwk5api/src/actions/authActions.js"],"names":["actionTypes","runtimeEnv","userLoggedIn","username","type","USER_LOGGEDIN","logout","USER_LOGOUT","submitLogin","data","env","dispatch","fetch","REACT_APP_API_URL","method","headers","body","JSON","stringify","mode","then","response","ok","Error","statusText","json","res","localStorage","setItem","token","catch","e","console","log","submitRegister","logoutUser","removeItem"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,0BAAxB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;;AAEA,SAASC,YAAT,CAAsBC,QAAtB,EAA+B;AAC3B,SAAO;AACHC,IAAAA,IAAI,EAAEJ,WAAW,CAACK,aADf;AAEHF,IAAAA,QAAQ,EAAEA;AAFP,GAAP;AAIH;;AAED,SAASG,MAAT,GAAiB;AACb,SAAO;AACHF,IAAAA,IAAI,EAAEJ,WAAW,CAACO;AADf,GAAP;AAGH;;AAED,OAAO,SAASC,WAAT,CAAqBC,IAArB,EAA0B;AAC7B,MAAMC,GAAG,GAAGT,UAAU,EAAtB;AACA,SAAO,UAAAU,QAAQ,EAAI;AACf,WAAOC,KAAK,WAAIF,GAAG,CAACG,iBAAR,cAAoC;AAC5CC,MAAAA,MAAM,EAAE,MADoC;AAE5CC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX,OAFmC;AAM5CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,IAAf,CANsC;AAO5CU,MAAAA,IAAI,EAAE;AAPsC,KAApC,CAAL,CAQFC,IARE,CAQI,UAACC,QAAD,EAAc;AACjB,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AACd,cAAMC,KAAK,CAACF,QAAQ,CAACG,UAAV,CAAX;AACH;;AACD,aAAOH,QAAQ,CAACI,IAAT,EAAP;AACH,KAbE,EAcFL,IAdE,CAcI,UAACM,GAAD,EAAS;AACZC,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCnB,IAAI,CAACN,QAAtC;AACAwB,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,GAAG,CAACG,KAAlC;AAEAlB,MAAAA,QAAQ,CAACT,YAAY,CAACO,IAAI,CAACN,QAAN,CAAb,CAAR;AACH,KAnBE,EAoBF2B,KApBE,CAoBK,UAACC,CAAD;AAAA,aAAOC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAAP;AAAA,KApBL,CAAP;AAqBH,GAtBD;AAuBH;AAED,OAAO,SAASG,cAAT,CAAwBzB,IAAxB,EAA6B;AAChC,MAAMC,GAAG,GAAGT,UAAU,EAAtB;AACA,SAAO,UAAAU,QAAQ,EAAI;AACf,WAAOC,KAAK,WAAIF,GAAG,CAACG,iBAAR,cAAoC;AAC5CC,MAAAA,MAAM,EAAE,MADoC;AAE5CC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX,OAFmC;AAM5CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,IAAf,CANsC;AAO5CU,MAAAA,IAAI,EAAE;AAPsC,KAApC,CAAL,CAQFC,IARE,CAQI,UAACC,QAAD,EAAc;AACjB,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AACd,cAAMC,KAAK,CAACF,QAAQ,CAACG,UAAV,CAAX;AACH;;AACD,aAAOH,QAAQ,CAACI,IAAT,EAAP;AACH,KAbE,EAcFL,IAdE,CAcI,UAACM,GAAD,EAAS;AAEZf,MAAAA,QAAQ,CAACH,WAAW,CAACC,IAAD,CAAZ,CAAR;AACH,KAjBE,EAkBFqB,KAlBE,CAkBK,UAACC,CAAD;AAAA,aAAOC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAAP;AAAA,KAlBL,CAAP;AAmBH,GApBD;AAqBH;AAED,OAAO,SAASI,UAAT,GAAsB;AACzB,SAAO,UAAAxB,QAAQ,EAAI;AACfgB,IAAAA,YAAY,CAACS,UAAb,CAAwB,UAAxB;AACAT,IAAAA,YAAY,CAACS,UAAb,CAAwB,OAAxB;AACAzB,IAAAA,QAAQ,CAACL,MAAM,EAAP,CAAR;AACH,GAJD;AAKH","sourcesContent":["import actionTypes from '../constants/actionTypes';\nimport runtimeEnv from '@mars/heroku-js-runtime-env';\n\nfunction userLoggedIn(username){\n    return {\n        type: actionTypes.USER_LOGGEDIN,\n        username: username\n    }\n}\n\nfunction logout(){\n    return {\n        type: actionTypes.USER_LOGOUT\n    }\n}\n\nexport function submitLogin(data){\n    const env = runtimeEnv();\n    return dispatch => {\n        return fetch(`${env.REACT_APP_API_URL}/signin`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data),\n            mode: 'cors'})\n            .then( (response) => {\n                if (!response.ok) {\n                    throw Error(response.statusText);\n                }\n                return response.json();\n            })\n            .then( (res) => {\n                localStorage.setItem('username', data.username);\n                localStorage.setItem('token', res.token);\n\n                dispatch(userLoggedIn(data.username));\n            })\n            .catch( (e) => console.log(e) );\n    }\n}\n\nexport function submitRegister(data){\n    const env = runtimeEnv();\n    return dispatch => {\n        return fetch(`${env.REACT_APP_API_URL}/signup`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data),\n            mode: 'cors'})\n            .then( (response) => {\n                if (!response.ok) {\n                    throw Error(response.statusText);\n                }\n                return response.json();\n            })\n            .then( (res) => {\n\n                dispatch(submitLogin(data));\n            })\n            .catch( (e) => console.log(e) );\n    }\n}\n\nexport function logoutUser() {\n    return dispatch => {\n        localStorage.removeItem('username');\n        localStorage.removeItem('token');\n        dispatch(logout());\n    }\n}"]},"metadata":{},"sourceType":"module"}